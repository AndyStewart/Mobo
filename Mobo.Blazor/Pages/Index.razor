@using System.Threading
@implements IDisposable
@page "/"
@functions {
    private Mob _mob;
    private Timer _timer;

    protected override void OnInitialized() => _timer = new Timer(
        async state => await InvokeAsync(StateHasChanged),
        null,
        TimeSpan.FromSeconds(1),
        TimeSpan.FromSeconds(1));
    
    private void CreateMob()
    {
        if (string.IsNullOrEmpty(MobName))
        {
            ErrorMessage = "You must enter a mob name";
            return;
        }
        
        _mob = new Mob(MobName);
    }

    private string MobName { get; set; }
    private string MemberName { get; set; }

    private void AddMember()
    {
        try
        {
            _mob.AddMember(MemberName);
            MemberName = null;
        }
        catch (ArgumentException)
        {
            ErrorMessage = "Invalid member name";
        }
    }

    private string ErrorMessage { get; set; }

    public void Dispose() => _timer?.Dispose();

}

@if (_mob == null)
{
    <div>
        <label>Enter a name of your mob:</label>
        <input type="text" id="mobName" @bind="MobName"/>
        <button @onclick="CreateMob">Create</button>
    </div>
    if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="error">@ErrorMessage</div>
    }
}
else
{
    <h1>Welcome to the mob: @_mob.Name</h1>
    <div>
        @if (_mob.Members.Count > 0) 
        {
            <p>
                Current turn: <span class="current-turn">@_mob.WhosTurnIsIt(DateTime.Now)</span>
            </p>
        }
        <ul class="members">
            @foreach (var member in _mob.Members)
            {
                <li>@member</li>
            }
        </ul>
        <div>
            <input type="text" class="member-name" @bind="MemberName"/>
            <button class="add-member" @onclick="AddMember">Add Member</button>
        </div>
        
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="error">@ErrorMessage</div>
        }
        <div>    
            <button class="start-timer" @onclick="q => _mob.StartTimer(DateTime.Now)">Start</button>
        </div>
        <div class="time-left">
            @string.Format("{0:mm}:{0:ss}",_mob.TimeLeft(DateTime.Now))
        </div>
    </div>
}